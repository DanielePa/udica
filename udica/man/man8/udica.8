.\" Copyright (C) 2018 Lukas Vrabec, <lvrabec@redhat.com>
.\"
.\" This program is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program.  If not, see <https://www.gnu.org/licenses/>.

.\" Manpage for udica.
.\" Contact lvrabec@redhat.com to correct errors or typos.
.TH man 8 "17 February 2019" "1.1" "udica man page"

.SH NAME
udica \- The tool for generating SELinux security profiles for containers.

.SH SYNOPSIS
udica [options] container_name

.SH DESCRIPTION
The tool for generating SELinux security profiles for containers. The whole concept is based on "block inheritence" feature inside CIL intermediate language supported by SELinux userspace. The tool creates a policy which combines rules inherited from specified CIL blocks(templates) and rules discovered by inspection of container JSON file, which contains mountpoints and ports definitions.

.SH OPTIONS
.TP
.I  \-h, \-\-help
show this help message and exit

.TP
.I   \-i, \-\-container\-id ID
ID of the running container for which should be SELinux policy created

.TP
.I   \-j, \-\-json JSONFILE
Load json of inspected container from this file

.TP
.I   \-l, \-\-load\-modules
Load templates and module created by this tool

.TP
.I  \-c, \-\-caps CAPS
List of capabilities, e.g "\-c AUDIT\_WRITE,CHOWN,DAC\_OVERRIDE,FOWNER,FSETID,KILL"
(for docker engine mandatory to use, see BUGS section)

.TP
.I   \-\-full\-network\-access
Allow container full Network access

.TP
.I   \-\-tty\-access
Allow container to read and write the controlling terminal

.TP
.I   \-\-X\-access
Allow container to communicate with Xserver

.TP
.I   \-\-virt\-access
Allow container to communicate with libvirt

.SH EXAMPLES
.nf
# cat my_con.json | udica \-\-x\-access \-\-full\-network\-access my_container
Creates new SELinux policy with name my_container based on inspecting container and adding access
to X server and full network access.

.SH SEE ALSO
.BR selinux(8),
.BR podman(1)

.SH BUGS
Not possible to detect capabilities used by container in docker engine,
therefore you have to use '-c' to specify capabilities for docker container manually.

Not possible to generate custom local policy using "audit2allow -M" tool from AVCs where source context was generated by udica.

.SH REPORTING BUGS
Report bugs to <https://github.com/containers/udica/issues/>

.SH AUTHOR
Written by Lukas Vrabec (lvrabec@redhat.com)
